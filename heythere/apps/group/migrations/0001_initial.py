# Generated by Django 3.2.13 on 2022-05-01 08:57

import django.contrib.postgres.fields.ranges
import django.contrib.postgres.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_google_maps.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('search', '0003_auto_20220429_0710'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_geo_location', django_google_maps.fields.GeoLocationField(blank=True, max_length=100, null=True)),
                ('gps_checked', models.BooleanField(default=False)),
                ('gps_last_check_time', models.DateTimeField(blank=True, null=True)),
                ('member_number', models.IntegerField(blank=True, null=True)),
                ('member_avg_age', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title of Group')),
                ('introduction', models.TextField(blank=True, max_length=500, null=True)),
                ('desired_other_group_member_number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(5)])),
                ('desired_other_group_member_avg_age_range', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, default=(20, 30), null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(20), django.contrib.postgres.validators.RangeMaxValueValidator(50)])),
                ('is_active', models.BooleanField(default=True)),
                ('active_until', models.DateTimeField(blank=True, null=True)),
                ('hotplace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='search.hotplace')),
            ],
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
